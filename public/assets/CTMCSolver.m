%% CTMCSolver.m - Template for CTMC solving
% This file is dynamically generated by the SHIFTAI application
% It will be replaced with the actual model when running CTMC analysis

%% Default example - 4-state queueing system
% This is a placeholder - will be replaced with actual model data

% 1. Define state space (0-3 customers in queue)
states = 0:3;

% 2. List of transitions [from to rate] (�=2, �=1)
transitions = [
    1  2  2;   % 0�1 with �=2 (MATLAB indexes from 1)
    2  3  2;   % 1�2
    3  4  2;   % 2�3
    2  1  1;   % 1�0 with �=1
    3  2  1;   % 2�1
    4  3  1    % 3�2
];

% 3. Build generator Q (4�4)
Q = buildGenerator(states, transitions);

% 4. Initial distribution (state 0 certain � index 1)
pi0 = [1 0 0 0];

% 5. Transient at t = 5 (default method = expm)
t = 5;
pi_t_expm = solveCTMC(Q, pi0, t);

% Same using uniformization
pi_t_uni = solveCTMC(Q, pi0, t, "method", "uniformization", "tol", 1e-12);

% 6. Stationary distribution
pi_inf = stationaryPI(Q);

% 7. Print results
fprintf("\n�(t=5) with expm: %s\n", mat2str(pi_t_expm, 6));
fprintf("�(t=5) uniformization: %s\n", mat2str(pi_t_uni, 6));
fprintf("� stationary: %s\n", mat2str(pi_inf, 6));

% 8. Save results
resultsFile = fullfile(pwd, 'output/results.mat');
save(resultsFile, 'pi_t_expm', 'pi_t_uni', 'pi_inf', 'Q', 'pi0', 'states', 'transitions');
fprintf("\nResults saved to: %s\n", resultsFile);