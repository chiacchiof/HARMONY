"use strict";(self.webpackChunkdynamic_fault_tree_editor=self.webpackChunkdynamic_fault_tree_editor||[]).push([[699],{699:(e,t,o)=>{o.d(t,{MatlabExecutionService:()=>r});class r{static async executeMatlabSimulation(e){try{console.log("\ud83d\ude80 Sending MATLAB execution request to backend...");const t=await fetch("".concat(this.API_BASE_URL,"/matlab/execute"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error("Backend API error: ".concat(t.status," ").concat(t.statusText));const o=await t.json();if(!o.success)throw new Error(o.error||"MATLAB execution failed");console.log("\u2705 MATLAB execution completed successfully"),console.log("\ud83d\udcca Output:",o.output)}catch(t){throw console.error("\u274c Failed to execute MATLAB:",t),t}}static async startMatlabWithMonitoring(e,t){try{var o;console.log("\ud83d\udd27 Starting MATLAB with real-time monitoring...");const r=await fetch("".concat(this.API_BASE_URL,"/matlab/execute-stream"),{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/event-stream"},body:JSON.stringify(e)});if(!r.ok)throw new Error("Backend API error: ".concat(r.status," ").concat(r.statusText));const a=null===(o=r.body)||void 0===o?void 0:o.getReader();if(!a)throw new Error("Failed to get response stream reader");return new Promise(async(e,o)=>{const r=new TextDecoder;let s="";try{for(;;){const{done:n,value:i}=await a.read();if(n){console.log("\ud83d\udce1 Stream ended");break}s+=r.decode(i,{stream:!0});const l=s.split("\n");s=l.pop()||"";for(const r of l)if(r.startsWith("data: "))try{const s=r.substring(6);if(s.trim()){const r=JSON.parse(s);if(console.log("\ud83d\udce1 Real-time update:",r),void 0!==r.progress&&t(r.progress,r.output||""),r.success)return console.log("\ud83c\udf89 MATLAB simulation completed!"),a.releaseLock(),void e();if(r.hasOwnProperty("exitCode")&&0!==r.exitCode)return console.error("\u274c MATLAB simulation failed with exit code:",r.exitCode),a.releaseLock(),void o(new Error("MATLAB simulation failed (exit code: ".concat(r.exitCode,")")));if(r.error&&void 0!==r.progress&&(console.error("\u274c MATLAB execution error:",r.error),t(r.progress,"\u274c ERRORE: ".concat(r.error,"\n").concat(r.output||""))),r.error&&void 0===r.progress)return console.error("\u274c MATLAB execution error:",r.error),a.releaseLock(),void o(new Error(r.error))}}catch(c){console.error("Failed to parse SSE data:",c,"Line:",r)}}a.releaseLock(),e()}catch(n){console.error("\u274c Stream reading error:",n),a.releaseLock(),o(n)}})}catch(r){throw console.error("\u274c Failed to start MATLAB monitoring:",r),r}}static async checkBackendAvailability(){try{return(await fetch("".concat(this.API_BASE_URL,"/health"),{method:"GET",signal:AbortSignal.timeout(5e3)})).ok}catch(e){return console.warn("\u26a0\ufe0f Backend API not available:",e),!1}}static async stopMatlabSimulation(){try{console.log("\ud83d\uded1 Requesting MATLAB simulation stop...");const e=await fetch("".concat(this.API_BASE_URL,"/matlab/stop"),{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("Backend API error: ".concat(e.status," ").concat(e.statusText));const t=await e.json();return t.success?(console.log("\u2705 MATLAB simulation stop requested successfully"),console.log("\ud83d\udcdd Message:",t.message),!0):(console.error("\u274c Failed to stop MATLAB simulation:",t.error),!1)}catch(e){return console.error("\u274c Failed to stop MATLAB simulation:",e),!1}}}r.API_BASE_URL="http://localhost:3001/api"}}]);
//# sourceMappingURL=699.9556c9ff.chunk.js.map